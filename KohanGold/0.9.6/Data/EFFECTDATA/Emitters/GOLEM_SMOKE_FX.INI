;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; _emitter_template.ini
;;
;; FX Particle Emitter template
;; Copyright © 2000 TimeGate Studios
;;
;; Created Jun 11 2000 by DRP
;;
;; NOTE: all coordinates are in tiles or seconds. Tiles are approximately 2 meters
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; General Data
;; Class = 0 (normal)
;;         1 (fireball, creates two twining emitters)
;;		   2 (parametric, emitter that moves in a parametric pattern [unfinished])
;;         3 (cloud, creates particles in a cloud pattern)
;;		   4 (stream, height arcing emitter [untested])
;;		   5 (fan, create particles in a fan pattern [very special case])
;; Lifetime = seconds the emitter lasts
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[FXData]
Class =   3
NeverExpires = 1	;; drp021901 - removed

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Sprite Data - dictates how to draw each particle
;; - Sprite = what sprite to draw
;; - VisibilityDelay = don't start drawing until it is this old in seconds (default 0)
;;
;; For Sprite FX only:  [Unsupported for particles!]
;; - AnimTime = how long it takes for the sprite to play one animation cycle
;; - Looping = loop the animation or not (default 0)
;; - NumTimesToLoop = how many times to loop
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[FXSpriteData]
Sprite =		firesmk.TGR

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Emitter Data - emitter specific behavior
;; - emission_rate = particles per second to emit
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[EmitterData]
emission_rate           = 4                   ;particles per second

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Particle Data - particle behaviour
;; - see [FXSpriteData] for what sprite to draw
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[ParticleData]

;; particle_type = 0 for sprite, 1 for pixel (default 0)
particle_type			=   0		

;; Movement = 0 for normal, 1 for parametric
;; - when you use '1' it moves in an circular centered pattern, and ignores any velocity
;;   given to it by the emitter (although energy is still used)
Movement = 0

;; Lifetime = control how long the particle lives
lifetime_start			=   1.5;4		
lifetime_variance		=   .05		

;; Z = give a particle an initial vertical position
;; ZVelocity = give a particle an initial vertical movement [Start + RANDOM(0-Range)]
;; ZVelocityMin = particle never goes slower than this (default -1000)
;; LighterThanAir = ignore gravity (ZVelocity never changes)
;; NOTES: 
;; - gravity acceleration is -4.9 per second^2
;; - Min=0 means never fall, Min=0.5 means float
Z = 0
ZVelocityStart = .5
ZVelocityRange = .2;2
ZVelocityMin   = .5
LighterThanAir = 1

;; energy = horizontal speed of the particle [start + RANDOM(0-variance)]
energy_start = .3;.9
energy_variance = .05;.2

;; position = random offset to starting position of particles [start + RANDOM(0-variance)]
position_start = .2
position_variance = .2

;; Control how the sprite is drawn
DrawType			=   Regular ;Regular, ScreenBlend, AdditiveBlend, ColorScreenBlend
SpecialBlendFrames		=   2		;this is the number of first frames to draw using screen , ColorScreen, or additive blend
R						=	255		;RGB values are used only if draw type is ColorScreenBlend
G						=	255		;if particle is a pixel, then this is the color of the pixel
B						=	255

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Custom Data
;; 
;; Fireball:
;; - 1 = wave width (e.g. 0.16)
;; - 2 = waves per second (e.g. 2)
;;
;; Cloud
;; - 1 = maximum radius of the cloud (it grows/shrinks as it ages)
;; - 3 = 1 to attach the particles locally (they move with the system)
;;
;; Stream
;; - 1 = maximum height
;;
;; Fan
;; - 2 = angular width of the fan (in degrees)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[VariableData]
variable_data_1 =
variable_data_2	=	
variable_data_3	= 	
